<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
    <h3 class="brass_specific">.relocate</h3>
        <pre class="code">.relocate <i>address</i></pre>
        <p>Defines a block of code as relocatable. Whilst the block of code is output at the current address, all labels are calculated with an offset applied, to allow the block of code to be copied elsewhere with the correct label addresses.</p>        
        <p>Here is a stupid example. We are running on a ROM, but we have some RAM at location $C000. We have a routine that relies on self-modifying code. We need to copy it into RAM, therefore to run it. The routine is between the labels <tt class="code">code</tt> and <tt class="code">code_end</tt>.</p>
        <pre class="code">ram = $C000 ; RAM is at location $C000

.org $0000 ; We're in ROM.

    ; Copy to RAM
    ld hl,code
    ld bc,code-code_end
    ld de,ram
    ldir
    
    ; Run it:
    call ram
    
    ; End the program
    di
    halt

; ---

code
.relocate ram

    ld a,10
    ld (counter+1),a

loop
    call do_something
counter
    ld a,0 ; Self-modifying
    dec a
    ld (counter+1),a
    jp nz,loop
    ret
    
.endrelocate
code_end 

; ---

do_something
    push af
    out ($CC),a
    pop af
    ret</pre>
        <p>The jump to <tt class="code">loop</tt> will work fine, as the label is inside the relocated code block. The routine <tt class="code">do_something</tt> is called using the absolute address, as it is defined outside of the relocated code block.</p>
        <p>Bear in mind that the special symbol <tt>$</tt> (current instruction pointer) is also translated.</p>
        <link rel="Stylesheet" href="../style.css" />