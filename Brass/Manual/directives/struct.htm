<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
        <h3 class="brass_specific">.struct/.endstruct</h3>
        <pre class="code">.struct <i>name</i></pre>
        <p>These directives can be used to define a structure - a consecutive group of variables with a fixed format. Here's an example:</p>
        <pre class="code">; Define it

.struct Point2D
    .var db, X
    .var db, Y
.endstruct

; Use it

.var Point2D, Me

    ld a,10
    ld (Me.X),a
    
    ld a,32
    ld (Me.Y),a
    
    ld hl,10+32*256
    ld (Me),hl</pre>
        <p>The directive works (in this case) by creating three labels and a new module. One label is <tt class="code">Me</tt>, pointing to the start of the variable. The module created is added as a child to the current one, with the name <tt class="code">Me</tt> and has two child labels, <tt class="code">X</tt> (with a value of <tt class="code">Me+0</tt>) and <tt class="code">Y</tt> (with a value of <tt class="code">Me+1</tt>).</p>
    <p>You may only use <tt class="code">.var</tt> and conditional directives inside a structure's definition. You can nest structures - for example:</p><pre class="code">.struct Point3D
    .var Point2D, P
    .var db,      Z
.endstruct

.var Point3D, You

    ld a,(You.P.X)</pre>
        <p>You may not, however, nest a structure onto itself. You might feel tempted, for example, to do the following:</p>
        <pre class="code">.struct TreeNode
    .var word, Value
    .var TreeNode, RightBranch
    .var TreeNode, LeftBranch
.endstruct</pre>
        <p>The problem is that that particular structure has an infinite size! If you wish to implement that sort of data structure, you'd use pointers to the branch nodes.</p><link rel="Stylesheet" href="../style.css" />